"""You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:

Input: s = "", t = "y"
Output: "y"
Example 3:

Input: s = "a", t = "aa"
Output: "a"
Example 4:

Input: s = "ae", t = "aea"
Output: "a"

"""

# My First way 52ms, 14.4mb
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        #first created a dictionary to str=ore values of string s
        dic = {}

        #iterate through each items of string s
        for i in s:
            #if the item is not in dictionary, put it in and give it value 1
            if i not in dic:
                dic[i] = 1
            # else increment the value of item
            else:
                dic[i] += 1
        
        #iterate through each items of string t
        for i in t:
            # if the item is in dictionary we decrement the value of item and check if the value is zero, which means no items of string s left, then we pop the item from the dictionary
            if i in dic:
                dic[i] -= 1
                if dic[i] == 0:
                    dic.pop(i)
            # else we return the item which is not present in string s
            else:
                return i

# Method 2 from discussion 44 ms, 14.3 MB
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # first sort both the strings, so that they are in same order
    	s, t = sorted(s), sorted(t)
        # loop through string s with index
    	for i,j in enumerate(s):
            # check if item of string s is equal to item of string t, return if not same
    		if j != t[i]: return t[i]

        # else return last element
    	return t[-1]

# Method 3 from discussion 36 ms, 14.3 MB
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # iterate through the set of string t, removing duplicates
    	for i in set(t):
            # if the count of item of string t is not equal to count of item in string s, return item
    		if s.count(i) != t.count(i): return i


# Method 4 from discussion 28 ms, 14.4 MB
from collections import Counter

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # count the number of items in each string and see the difference
    	return list(Counter(t) - Counter(s))[0]